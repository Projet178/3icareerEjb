package beans;
// Generated 24 nov. 2015 11:14:29 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.ejb.Remote;
import javax.ejb.Stateful;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

import interfaces.ImpUtilisateur;

/**
 * Utilisateur generated by hbm2java
 */

@Stateful
@Remote(ImpUtilisateur.class)

@Entity
@Table(name = "utilisateur", schema = "public")
public class Utilisateur implements java.io.Serializable, ImpUtilisateur {

	private int idutilisateur;
	private String typeutilisateur;
	private String nomutilisateur;
	private String prenomutilisateur;
	private String motdepasse;
	private Long numtelephone;
	private String email;
	private Date dateinscription;
	private Set<OccuperMetier> occuperMetiers = new HashSet<OccuperMetier>(0);
	private Expert expert;
	private Administrateur administrateur;
	private Set<PostulerOffre> postulerOffres = new HashSet<PostulerOffre>(0);
	private Etudiant etudiant;
	private Set<AcquerirCompetence> acquerirCompetences = new HashSet<AcquerirCompetence>(0);
	private Recruteur recruteur;
	private Set<Fichier> fichiers = new HashSet<Fichier>(0);
	private Set<ParticiperEvenement> participerEvenements = new HashSet<ParticiperEvenement>(0);

	public Utilisateur() {
	}
	public Utilisateur(String nomutilisateur, String prenomutilisateur, String motdepasse,
			String email, Date dateinscription) {
		this.nomutilisateur = nomutilisateur;
		this.prenomutilisateur = prenomutilisateur;
		this.motdepasse = motdepasse;
		this.email = email;
		this.dateinscription = dateinscription;
	}
	public Utilisateur(int idutilisateur, String nomutilisateur, String prenomutilisateur, String motdepasse,
			String email, Date dateinscription) {
		this.idutilisateur = idutilisateur;
		this.nomutilisateur = nomutilisateur;
		this.prenomutilisateur = prenomutilisateur;
		this.motdepasse = motdepasse;
		this.email = email;
		this.dateinscription = dateinscription;
	}

	public Utilisateur(int idutilisateur, String typeutilisateur, String nomutilisateur, String prenomutilisateur,
			String motdepasse, Long numtelephone, String email, Date dateinscription, Set<OccuperMetier> occuperMetiers,
			Expert expert, Administrateur administrateur, Set<PostulerOffre> postulerOffres, Etudiant etudiant,
			Set<AcquerirCompetence> acquerirCompetences, Recruteur recruteur, Set<Fichier> fichiers,
			Set<ParticiperEvenement> participerEvenements) {
		this.idutilisateur = idutilisateur;
		this.typeutilisateur = typeutilisateur;
		this.nomutilisateur = nomutilisateur;
		this.prenomutilisateur = prenomutilisateur;
		this.motdepasse = motdepasse;
		this.numtelephone = numtelephone;
		this.email = email;
		this.dateinscription = dateinscription;
		this.occuperMetiers = occuperMetiers;
		this.expert = expert;
		this.administrateur = administrateur;
		this.postulerOffres = postulerOffres;
		this.etudiant = etudiant;
		this.acquerirCompetences = acquerirCompetences;
		this.recruteur = recruteur;
		this.fichiers = fichiers;
		this.participerEvenements = participerEvenements;
	}

	@Id
/*	@GenericGenerator(name = "sequence", strategy = "sequence", parameters = {
    @org.hibernate.annotations.Parameter(name = "sequenceName", value = "sequence"),
    @org.hibernate.annotations.Parameter(name = "allocationSize", value = "1"),
    })
    @GeneratedValue(generator = "sequence", strategy=GenerationType.SEQUENCE)*/
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "idutilisateur", unique = true, nullable = false)
	
	public int getIdutilisateur() {
		return this.idutilisateur;
	}

	public void setIdutilisateur(int idutilisateur) {
		this.idutilisateur = idutilisateur;
	}

	@Column(name = "typeutilisateur", length = 128)
	public String getTypeutilisateur() {
		return this.typeutilisateur;
	}

	public void setTypeutilisateur(String typeutilisateur) {
		this.typeutilisateur = typeutilisateur;
	}

	@Column(name = "nomutilisateur", nullable = false)
	public String getNomutilisateur() {
		return this.nomutilisateur;
	}

	public void setNomutilisateur(String nomutilisateur) {
		this.nomutilisateur = nomutilisateur;
	}

	@Column(name = "prenomutilisateur", nullable = false)
	public String getPrenomutilisateur() {
		return this.prenomutilisateur;
	}

	public void setPrenomutilisateur(String prenomutilisateur) {
		this.prenomutilisateur = prenomutilisateur;
	}

	@Column(name = "motdepasse", nullable = false)
	public String getMotdepasse() {
		return this.motdepasse;
	}

	public void setMotdepasse(String motdepasse) {
		this.motdepasse = motdepasse;
	}

	@Column(name = "numtelephone")
	public Long getNumtelephone() {
		return this.numtelephone;
	}

	public void setNumtelephone(Long numtelephone) {
		this.numtelephone = numtelephone;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateinscription", nullable = false, length = 13)
	public Date getDateinscription() {
		return this.dateinscription;
	}

	public void setDateinscription(Date dateinscription) {
		this.dateinscription = dateinscription;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Set<OccuperMetier> getOccuperMetiers() {
		return this.occuperMetiers;
	}

	public void setOccuperMetiers(Set<OccuperMetier> occuperMetiers) {
		this.occuperMetiers = occuperMetiers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Expert getExpert() {
		return this.expert;
	}

	public void setExpert(Expert expert) {
		this.expert = expert;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Administrateur getAdministrateur() {
		return this.administrateur;
	}

	public void setAdministrateur(Administrateur administrateur) {
		this.administrateur = administrateur;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Set<PostulerOffre> getPostulerOffres() {
		return this.postulerOffres;
	}

	public void setPostulerOffres(Set<PostulerOffre> postulerOffres) {
		this.postulerOffres = postulerOffres;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Etudiant getEtudiant() {
		return this.etudiant;
	}

	public void setEtudiant(Etudiant etudiant) {
		this.etudiant = etudiant;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Set<AcquerirCompetence> getAcquerirCompetences() {
		return this.acquerirCompetences;
	}

	public void setAcquerirCompetences(Set<AcquerirCompetence> acquerirCompetences) {
		this.acquerirCompetences = acquerirCompetences;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Recruteur getRecruteur() {
		return this.recruteur;
	}

	public void setRecruteur(Recruteur recruteur) {
		this.recruteur = recruteur;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Set<Fichier> getFichiers() {
		return this.fichiers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Set<ParticiperEvenement> getParticiperEvenements() {
		return this.participerEvenements;
	}

	public void setParticiperEvenements(Set<ParticiperEvenement> participerEvenements) {
		this.participerEvenements = participerEvenements;
	}

	@Override
	public void setFichiers(Set fichiers) {
		// TODO Auto-generated method stub
		
	}

}

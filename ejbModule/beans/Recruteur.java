package beans;
// Generated 24 nov. 2015 11:14:29 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.ejb.Remote;
import javax.ejb.Stateful;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import interfaces.ImpRecruteur;

/**
 * Recruteur generated by hbm2java
 */

@Stateful
@Remote(ImpRecruteur.class)

@Entity
@Table(name = "recruteur", schema = "public")
public class Recruteur implements java.io.Serializable, ImpRecruteur {

	private int idutilisateur;
	private Entreprise entreprise;
	private Utilisateur utilisateur;
	private Set<Offre> offres = new HashSet<Offre>(0);

	public Recruteur() {
	}

	public Recruteur(Entreprise entreprise, Utilisateur utilisateur) {
		this.entreprise = entreprise;
		this.utilisateur = utilisateur;
	}

	public Recruteur(Entreprise entreprise, Utilisateur utilisateur, Set<Offre> offres) {
		this.entreprise = entreprise;
		this.utilisateur = utilisateur;
		this.offres = offres;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "utilisateur") )
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "idutilisateur", unique = true, nullable = false)
	public int getIdutilisateur() {
		return this.idutilisateur;
	}

	public void setIdutilisateur(int idutilisateur) {
		this.idutilisateur = idutilisateur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "identreprise", nullable = false)
	public Entreprise getEntreprise() {
		return this.entreprise;
	}

	public void setEntreprise(Entreprise entreprise) {
		this.entreprise = entreprise;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "recruteur")
	public Set<Offre> getOffres() {
		return this.offres;
	}

	public void setOffres(Set<Offre> offres) {
		this.offres = offres;
	}

}
